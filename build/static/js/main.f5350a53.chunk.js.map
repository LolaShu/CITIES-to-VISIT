{"version":3,"sources":["DisplayPhoto.js","Form.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayPhotos","photos","length","duration","canSwipe","map","photo","className","src","urls","regular","alt","alt_description","user","first_name","id","Form","props","useState","userChoice","setUserChoice","console","log","useEffect","getPhotos","htmlFor","value","name","onChange","e","target","required","disabled","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","randomPhotos","setRandomPhotos","citiesArray","setCitiesArray","textInput","setTextInput","axios","url","method","dataResponse","params","client_id","query","orientation","per_page","then","response","responseArray","data","results","database","ref","on","val","cityData","cityBag","cityKey","push","uniqueKey","title","choice","DisplayPhoto","action","onSubmit","event","preventDefault","type","icon","faSuitcaseRolling","city","onClick","cityUniqueId","child","remove","faCheck","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA+BeA,EA3BO,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKrB,OACI,8BACuB,IAAlBA,EAAOC,OACJ,cAAC,QAAD,2BAPW,CACnBC,SAAU,IACVC,UAAU,IAKF,aACKH,EAAOI,KAAI,SAACC,GACT,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,8BACI,qBAAKC,IAAKF,EAAMG,KAAKC,QAASC,IAAKL,EAAMM,oBAE7C,6BAAKN,EAAMO,KAAKC,iBALaR,EAAMS,UAWrD,QCeHC,EAtCF,SAACC,GAAW,IAAD,EACgBC,mBAAS,eADzB,mBACbC,EADa,KACDC,EADC,KASpB,OAPAC,QAAQC,IAAIH,GACZI,qBAAU,WACa,gBAAfJ,GACAF,EAAMO,UAAUL,KAGrB,CAACA,IAEA,uBAAMZ,UAAU,cAAhB,UACI,uBAAOkB,QAAQ,aAAalB,UAAU,UAAtC,6BACA,yBACImB,MAAOP,EACPJ,GAAG,aACHY,KAAK,aACLC,SAAU,SAACC,GAAD,OAAOT,EAAcS,EAAEC,OAAOJ,QACxCK,UAAQ,EALZ,UAOI,wBAAQL,MAAM,cAAcM,UAAQ,EAApC,uBACA,wBAAQN,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,6B,cCtBhBO,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,sDACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKIR,QAAf,ECkGeS,MAvGf,WAAgB,IAAD,EAC2BxB,mBAAS,IADpC,mBACNyB,EADM,KACQC,EADR,OAEuB1B,mBAAS,IAFhC,mBAENC,EAFM,KAEMC,EAFN,OAGyBF,mBAAS,IAHlC,mBAGN2B,EAHM,KAGOC,EAHP,OAIqB5B,mBAAS,IAJ9B,mBAIN6B,EAJM,KAIKC,EAJL,KA8Db,OAzDAzB,qBAAU,WAER0B,IAAM,CACJC,IAAK,yCACLC,OAAQ,MACRC,aAAc,OACdC,OAAQ,CACNC,UAAW,8CACXC,MAAOpC,EACPqC,YAAa,YACbC,SAAU,KAEXC,MAAK,SAAAC,GACN,IAAMC,EAAgBD,EAASE,KAAKC,QACpClB,EAAgBgB,QAEjB,CAACzC,IAQJI,qBAAU,WACMU,EAAS8B,WAAWC,MAC5BC,GAAG,SAAS,SAACJ,GACjBxC,QAAQC,IAAIuC,EAAKK,OACjB,IAAMC,EAAWN,EAAKK,MAChBE,EAAU,GAChB,IAAK,IAAIC,KAAWF,EAClBC,EAAQE,KAAK,CACXC,UAAWF,EACXG,MAAOL,EAASE,KAGpBvB,EAAesB,QAGhB,IAmBD,sBAAK7D,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACA,+BACE,sBAAKA,UAAU,UAAf,UACE,iCACE,6DAEF,cAAC,EAAD,CAAMiB,UA9CE,SAACiD,GACjBrD,EAAcqD,MA8CN,cAACC,EAAD,CAAezE,OAAQ0C,IACvB,sBAAKpC,UAAU,aAAf,UACE,uBAAMoE,OAAO,GAAGC,SAvBP,SAACC,GACpBA,EAAMC,iBACQ7C,EAAS8B,WAAWC,MAC5BM,KAAKvB,GACXC,EAAa,KAmBqCzC,UAAU,cAAlD,UACE,wBAAOkB,QAAQ,gBAAgBlB,UAAU,WAAzC,UAAoD,uBAApD,2BACA,sBAAKA,UAAU,kBAAf,UACE,uBAAOwE,KAAK,OAAOhE,GAAG,cAAcgB,UAAQ,EAACH,SA9BxC,SAACiD,GACpB7B,EAAa6B,EAAM/C,OAAOJ,QA6ByDA,MAAOqB,IAC5E,iCAAQ,cAAC,IAAD,CAAiBiC,KAAMC,cAGnC,oBAAI1E,UAAU,cAAd,SAEIsC,EAAYxC,KAAI,SAAC6E,GACf,OACE,+BACE,wBAAQC,QAAS,WA7BnB,IAACC,IA6BsCF,EAAKX,UA5BhDtC,EAAS8B,WAAWC,MAC5BqB,MAAMD,GAAcE,UA2BN,SAAwD,cAAC,IAAD,CAAiBN,KAAMO,QAC/E,+BAAOL,EAAKV,UAFLU,EAAKX,0BAY9B,iCACE,uDAAyB,+BAAM,mBAAGiB,KAAK,2BAAR,qCC/FxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5350a53.chunk.js","sourcesContent":["//DisplayPhotos.js\r\n\r\nimport { Slide } from \"react-slideshow-image\";\r\n\r\nconst DisplayPhotos = ({ photos }) => {\r\n    const fadeProperties = {\r\n        duration: 5000,\r\n        canSwipe: true,\r\n    };\r\n    return (\r\n        <div>\r\n            {photos.length !== 0 ?\r\n                <Slide {...fadeProperties}>\r\n                    {photos.map((photo) => {\r\n                        return (\r\n                            <div className=\"slideContainer\" key={photo.id}>\r\n                                <div className=\"each-fade\">\r\n                                    <div>\r\n                                        <img src={photo.urls.regular} alt={photo.alt_description} />\r\n                                    </div>\r\n                                    <h2>{photo.user.first_name}</h2>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Slide> \r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default DisplayPhotos\r\n","//Form.js\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Form = (props) => {\r\n    const [userChoice, setUserChoice] = useState(\"placeholder\")\r\n    console.log(userChoice)\r\n    useEffect(() => {\r\n        if (userChoice !== \"placeholder\") {\r\n            props.getPhotos(userChoice);\r\n        }\r\n\r\n    }, [userChoice])\r\n    return (\r\n        <form className=\"city-choice\">\r\n            <label htmlFor=\"userChoice\" className=\"sr-only\">Select the city</label>\r\n            <select\r\n                value={userChoice}\r\n                id=\"userChoice\"\r\n                name=\"userChoice\"\r\n                onChange={(e) => setUserChoice(e.target.value)}\r\n                required\r\n            >\r\n                <option value=\"placeholder\" disabled>Pick city</option>\r\n                <option value=\"paris\">Paris</option>\r\n                <option value=\"new york\">New York</option>\r\n                <option value=\"london\">London</option>\r\n                <option value=\"amsterdam\">Amsterdam</option>\r\n                <option value=\"rome\">Rome</option>\r\n                <option value=\"venice\">Venice</option>\r\n                <option value=\"milan\">Milan</option>\r\n                <option value=\"istanbul\">Istanbul</option>\r\n                <option value=\"kyoto\">Kyoto</option>\r\n                <option value=\"beijing\">Beijing</option>\r\n                <option value=\"dubai\">Dubai</option>\r\n                <option value=\"berlin\">Berlin</option>\r\n                <option value=\"shanghai\">Shanghai</option>\r\n            </select>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import firebase from \"firebase/app\"\r\n\r\nimport \"firebase/database\"\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDvEVhiFgToqleLHWk-Iv8ZVpnotg8E0s0\",\r\n    authDomain: \"project-3-7796a.firebaseapp.com\",\r\n    databaseURL: \"https://project-3-7796a-default-rtdb.firebaseio.com\",\r\n    projectId: \"project-3-7796a\",\r\n    storageBucket: \"project-3-7796a.appspot.com\",\r\n    messagingSenderId: \"234590242310\",\r\n    appId: \"1:234590242310:web:ff6f07a7a99e330942e587\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase","import \"./App.scss\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faSuitcaseRolling } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DisplayPhotos from \"./DisplayPhoto.js\";\nimport Form from \"./Form.js\"\nimport firebase from \"./firebase.js\";\n\n// App.js\nfunction App() {\n  const [randomPhotos, setRandomPhotos] = useState([]);\n  const [userChoice, setUserChoice] = useState(\"\")\n  const [citiesArray, setCitiesArray] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n  useEffect(() => {\n\n    axios({\n      url: \"https://api.unsplash.com/search/photos\",\n      method: \"GET\",\n      dataResponse: \"json\",\n      params: {\n        client_id: \"L56MP65Tm-PvPhyEPZSV7TdDg__S-iBTbwwuWHe-eZU\",\n        query: userChoice,\n        orientation: \"landscape\",\n        per_page: 5\n      },\n    }).then(response => {\n      const responseArray = response.data.results;\n      setRandomPhotos(responseArray)\n    });\n  }, [userChoice]);\n\n\n  const getPhotos = (choice) => {\n    setUserChoice(choice)\n  }\n\n  //for city list\n  useEffect(() => {\n    const dbRef = firebase.database().ref();\n    dbRef.on(\"value\", (data) => {\n      console.log(data.val());\n      const cityData = data.val();\n      const cityBag = [];\n      for (let cityKey in cityData) {\n        cityBag.push({\n          uniqueKey: cityKey,\n          title: cityData[cityKey]\n        });\n      }\n      setCitiesArray(cityBag);\n    });\n\n  }, []);\n\n  const handleChange = (event) => {\n    setTextInput(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref();\n    dbRef.push(textInput);\n    setTextInput(\"\");\n  }\n  const handleClick = (cityUniqueId) => {\n    const dbRef = firebase.database().ref();\n    dbRef.child(cityUniqueId).remove();\n  }\n\n  \n  return (\n    <div className=\"App\">     \n        <div className=\"parent\">\n        <main>\n          <div className=\"wrapper\">\n            <header>\n              <h1>The most beautiful cities</h1>\n            </header>\n            <Form getPhotos={getPhotos} />\n            <DisplayPhotos photos={randomPhotos}/>\n            <div className=\"cities-box\">\n              <form action=\"\" onSubmit={handleSubmit} className=\"more-cities\">\n                <label htmlFor=\"citiesToVisit\" className=\"to-visit\"><h2></h2>Add cities to visit :</label>\n                <div className=\"cities-to-visit\">\n                  <input type=\"text\" id=\"cityToVisit\" required onChange={handleChange} value={textInput} />\n                  <button><FontAwesomeIcon icon={faSuitcaseRolling} /></button>\n                </div>\n              </form>\n              <ul className=\"cities-list\">\n                {\n                  citiesArray.map((city) => {\n                    return (\n                      <li key={city.uniqueKey}>\n                        <button onClick={() => { handleClick(city.uniqueKey) }}><FontAwesomeIcon icon={faCheck} /></button>\n                        <span>{city.title}</span>\n                      </li>\n                    )\n                  })\n                }\n              </ul>\n            </div>\n          </div>                \n      </main>\n      </div>\n      <footer>\n        <p>Created by Olga Sh at <span><a href=\"https://junocollege.com/\">Juno college</a></span></p>\n      </footer>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}